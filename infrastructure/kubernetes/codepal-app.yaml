apiVersion: apps/v1
kind: Deployment
metadata:
  name: codepal-app
  namespace: codepal-prod
  labels:
    app: codepal-app
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: codepal-app
  template:
    metadata:
      labels:
        app: codepal-app
        version: v1
    spec:
      containers:
      - name: codepal-app
        image: codepal/app:latest
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: url
        - name: NEXTAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: auth-secrets
              key: nextauth-secret
        - name: NEXTAUTH_URL
          value: "https://app.codepal.com"
        - name: OPENAI_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: ai-secrets
              key: openai-key
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: url
        - name: WS_PORT
          value: "3002"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: app-config
          mountPath: /app/config
          readOnly: true
        - name: app-logs
          mountPath: /app/logs
      volumes:
      - name: app-config
        configMap:
          name: codepal-config
      - name: app-logs
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: codepal-app
  namespace: codepal-prod
spec:
  selector:
    app: codepal-app
  ports:
  - name: http
    port: 80
    targetPort: 3000
  - name: https
    port: 443
    targetPort: 3000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: codepal-app-ingress
  namespace: codepal-prod
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
spec:
  tls:
  - hosts:
    - app.codepal.com
    - api.codepal.com
    secretName: codepal-tls
  rules:
  - host: app.codepal.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: codepal-app
            port:
              number: 80
  - host: api.codepal.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-gateway
            port:
              number: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: codepal-app-hpa
  namespace: codepal-prod
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: codepal-app
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: codepal-app-pdb
  namespace: codepal-prod
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: codepal-app
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: codepal-config
  namespace: codepal-prod
data:
  app.config.json: |
    {
      "features": {
        "ai": true,
        "collaboration": true,
        "plugins": true,
        "analytics": true
      },
      "limits": {
        "maxFileSize": "50MB",
        "maxProjectsPerUser": 100,
        "maxTeamMembers": 50
      },
      "security": {
        "rateLimit": 100,
        "sessionTimeout": 86400,
        "passwordMinLength": 8
      }
    } 